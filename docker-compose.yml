version: "3.8"

name: goalsamples

services:
  ravendb:
    image: ravendb/ravendb:4.2-ubuntu-latest
    container_name: ritter.co-goal-ravendb
    ports:
      - 8080:8080
      - 38888:38888
    environment:
      - RAVEN_ARGS='--Setup.Mode=None'
      - RAVEN_Security_UnsecuredAccessAllowed='PublicNetwork'
      - RAVEN_License_Eula_Accepted=true
    volumes:
      - ravendb-config:/opt/RavenDB/config
      - ravendb-data:/opt/RavenDB/Server/RavenData

  rabbitmq:
    hostname: 'mabbit'
    image: rabbitmq:3-management-alpine
    container_name: ritter.co-goal-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-mnesia:/var/lib/rabbitmq/mnesia/

  seq:
    image: datalust/seq:latest
    container_name: ritter.co-goal-seq
    ports:
      - 81:80
      - 5341:5341
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=FCYqICbqbAUjB9UmVl3ddA5EOeqd6d51jNwW+SgPK1wmajiQoQ==
    volumes:
      - seq-data:/var/lib/seq/data/

  mssql:
    image: "mcr.microsoft.com/mssql/server:2019-CU14-ubuntu-20.04"
    container_name: ritter.co-goal-mssql
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=BeycL18545#f
    volumes:
      - mssql-data:/var/opt/mssql

  keycloak:
    image: "quay.io/keycloak/keycloak:21.0.2"
    container_name: ritter.co-goal-keycloak
    ports:
      - "8081:8080"
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mssql
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=lol!Iusepasswords
      - KC_DB_URL_HOST=mssql
      - KC_DB_URL_PORT=1433
      - KC_DB_URL_PROPERTIES=encrypt=true;trsutServerCertificate=true;
      - KC_DB_URL_DATABASE=keycloak-dev
    volumes:
      - keycloak-data:/opt/keycloak/data/

  cqrs-api:
    image: ${REGISTRY:-ritter.co}/goal/cqrs-api:${PLATFORM:-linux}-${TAG:-latest}
    container_name: ritter.co-goal-cqrs-api
    restart: always
    build:
      context: .
      dockerfile: src/CQRS/Goal.Samples.CQRS.Api/Dockerfile
    ports:
        - "8002:80"
        - "4432:443"

  cqrs-worker:
    image: ${REGISTRY:-ritter.co}/goal/cqrs-worker:${PLATFORM:-linux}-${TAG:-latest}
    container_name: ritter.co-goal-cqrs-worker
    restart: always
    build:
      context: .
      dockerfile: src/CQRS/Goal.Samples.CQRS.Worker/Dockerfile
    ports:
        - "8003:80"
        - "4433:443"

volumes:
  mssql-data:
    name: ritter.co-goal-mssql-vol
  ravendb-config:
    name: ritter.co-goal-ravendb-config-vol
  ravendb-data:
    name: ritter.co-goal-ravendb-data-vol
  seq-data:
    name: ritter.co-goal-seq-vol
  keycloak-data:
    name: ritter.co-goal-keycloak-vol
  rabbitmq-data:
    name: ritter.co-goal-rabbitmq-data-vol
  rabbitmq-mnesia:
    name: ritter.co-goal-rabbitmq-mnesia-vol
