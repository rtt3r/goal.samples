version: "3.8"

name: goalsamples

services:
  ravendb:
    image: ravendb/ravendb:4.2-ubuntu-latest
    container_name: ravendb.goal.ritter.co
    ports:
      - 8080:8080
      - 38888:38888
    environment:
      - RAVEN_Security_UnsecuredAccessAllowed=PublicNetwork
      - RAVEN_Setup_Mode=None
      - RAVEN_License_Eula_Accepted=true
    volumes:
      - ravendb-data:/opt/RavenDB/Server/RavenData

  rabbitmq:
    hostname: 'mabbit'
    image: rabbitmq:latest
    container_name: rabbitmq.goal.ritter.co
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-mnesia:/var/lib/rabbitmq/mnesia/

  seq:
    image: datalust/seq:latest
    container_name: seq.goal.ritter.co
    ports:
      - 81:80
      - 5341:5341
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=FCYqICbqbAUjB9UmVl3ddA5EOeqd6d51jNwW+SgPK1wmajiQoQ==
    volumes:
      - seq-data:/var/lib/seq/data/

  mysql:
    image: "mysql:latest"
    container_name: mysql.goal.ritter.co
    hostname: mysql.ritter.co
    user: root
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=keycloak
      - MYSQL_ROOT_PASSWORD=BeycL18545#f
    volumes:
      - mysql-vol:/var/lib/mysql

  keycloak:
    image: "quay.io/keycloak/keycloak:latest"
    container_name: keycloak.goal.ritter.co
    hostname: keycloak.ritter.co
    user: root
    ports:
      - "8081:8080"
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mysql
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_DB_URL=jdbc:mysql://mysql:3306/keycloak
    volumes:
      - keycloak-data:/opt/keycloak/data

  core-app:
    image: ${REGISTRY:-ritter.co}/goal/core-app:${PLATFORM:-linux}-${TAG:-latest}
    container_name: core-app.goal.ritter.co
    restart: always
    build:
      context: .
      dockerfile: src/Core/Goal.Samples.Core.App/Dockerfile
    ports:
      - "8002:80"
      - "4432:443"

  core-worker:
    image: ${REGISTRY:-ritter.co}/goal/core-worker:${PLATFORM:-linux}-${TAG:-latest}
    container_name: core-worker.goal.ritter.co
    restart: always
    build:
      context: .
      dockerfile: src/Core/Goal.Samples.Core.Worker/Dockerfile
    ports:
      - "8003:80"
      - "4433:443"

volumes:
  mysql-vol:
    name: ritter.co-goal-mysql-vol
  ravendb-config:
    name: ritter.co-goal-ravendb-config-vol
  ravendb-data:
    name: ritter.co-goal-ravendb-data-vol
  seq-data:
    name: ritter.co-goal-seq-vol
  keycloak-data:
    name: ritter.co-goal-keycloak-vol
  rabbitmq-data:
    name: ritter.co-goal-rabbitmq-data-vol
  rabbitmq-mnesia:
    name: ritter.co-goal-rabbitmq-mnesia-vol
