// <auto-generated />
using Goal.Samples.DDD.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Goal.Samples.DDD.Infra.Data.Migrations.Ddd
{
    [DbContext(typeof(DddDbContext))]
    partial class DddDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Goal.Samples.DDD.Domain.People.Aggregates.Document", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Documents", (string)null);
                });

            modelBuilder.Entity("Goal.Samples.DDD.Domain.People.Aggregates.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("People", (string)null);
                });

            modelBuilder.Entity("Goal.Samples.DDD.Domain.People.Aggregates.Document", b =>
                {
                    b.HasOne("Goal.Samples.DDD.Domain.People.Aggregates.Person", "Person")
                        .WithOne("Cpf")
                        .HasForeignKey("Goal.Samples.DDD.Domain.People.Aggregates.Document", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Goal.Samples.DDD.Domain.People.Aggregates.Person", b =>
                {
                    b.OwnsOne("Goal.Samples.DDD.Domain.People.Aggregates.Name", "Name", b1 =>
                        {
                            b1.Property<string>("PersonId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LastName");

                            b1.HasKey("PersonId");

                            b1.ToTable("People");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("Name");
                });

            modelBuilder.Entity("Goal.Samples.DDD.Domain.People.Aggregates.Person", b =>
                {
                    b.Navigation("Cpf");
                });
#pragma warning restore 612, 618
        }
    }
}
